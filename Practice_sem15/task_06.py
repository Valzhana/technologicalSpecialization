# –ó–∞–¥–∞–Ω–∏–µ ‚Ññ6
# üìå –ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –∏–∑ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ –∏ –ø–æ–ª—É—á–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥
# –ø—É—Ç—å –¥–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –Ω–∞ –ü–ö.
# üìå –°–æ–±–µ—Ä–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º –≤ –≤–∏–¥–µ –æ–±—ä–µ–∫—Ç–æ–≤ namedtuple.
# üìå –ö–∞–∂–¥—ã–π –æ–±—ä–µ–∫—Ç —Ö—Ä–∞–Ω–∏—Ç:
# ‚óã –∏–º—è —Ñ–∞–π–ª–∞ –±–µ–∑ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–∞–ª–æ–≥–∞,
# ‚óã —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ, –µ—Å–ª–∏ —ç—Ç–æ —Ñ–∞–π–ª,
# ‚óã —Ñ–ª–∞–≥ –∫–∞—Ç–∞–ª–æ–≥–∞,
# ‚óã –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ –∫–∞—Ç–∞–ª–æ–≥–∞.
# üìå –í –ø—Ä–æ—Ü–µ—Å—Å–µ —Å–±–æ—Ä–∞ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤ —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª –∏—Å–ø–æ–ª—å–∑—É—è
# –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ.

from collections import namedtuple
from pathlib import Path
import logging
import argparse

logging.basicConfig(filename='task_06.log', encoding='utf-8', level=logging.INFO)
logger = logging.getLogger(__name__)

File = namedtuple('File', 'name, extension, is_dir, parent_dir')


def parse():
    parser = argparse.ArgumentParser(prog='read_dir',
                                     description='–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ñ–∞–π–ª–∞—Ö –∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è—Ö',
                                     epilog='read_dir("C:/Users/User/PycharmProjects/pythonProject'
                                            '/technologicalSpecialization/Practice_sem15")')
    parser.add_argument('-p', '--path', type=Path, default='.', help='–ü—É—Ç—å –¥–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –Ω–∞ –ü–ö')
    args = parser.parse_args()
    return read_dir(f'{args.path}')


def read_dir(path: Path):
    for file in path.iterdir():
        new_file = File(file.stem if file.is_file() else file.name, file.suffix, file.is_dir(), file.parent)
        logger.info(new_file)
        if new_file.is_dir:
            read_dir(Path(new_file.parent_dir) / new_file.name)


if __name__ == '__main__':
    print(read_dir(Path('C:/Users/User/PycharmProjects/pythonProject/technologicalSpecialization/Practice_sem15')))
